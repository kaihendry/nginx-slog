events {
    worker_connections 1024;
}


http {
    include mime.types;
    default_type application/octet-stream;


    # Log in JSON Format
    log_format nginxlog_json escape=json ' {
        "timestamp": "$time_iso8601", '
        '"remote_addr": "$remote_addr", '
        '"body_bytes_sent": $body_bytes_sent, '
        '"request_time": $request_time, '
        '"response_status": $status, '
        '"request": "$request", '
        '"request_method": "$request_method", '
        '"host": "$host",'
        '"upstream_addr": "$upstream_addr",'
        '"http_x_forwarded_for": "$http_x_forwarded_for",'
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"http_version": "$server_protocol", '
        '"nginx_access": true
    }
    ';
    access_log /dev/stdout nginxlog_json;
    error_log /dev/stderr info;


    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path /var/run/openresty/nginx-proxy;
    fastcgi_temp_path /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path /var/run/openresty/nginx-uwsgi;
    scgi_temp_path /var/run/openresty/nginx-scgi;

    sendfile on;


    server {
        location / {
            add_header Content-type text/plain;

            content_by_lua_block {
                local cjson = require "cjson"

                ngx.say("Hello world")

                local log_data = {
                    event = "greeting",
                    message = "Hello world",
                    timestamp = ngx.localtime()
                }

                local json_log = cjson.encode(log_data)
                ngx.log(ngx.INFO, json_log)
            }
        }
    }
}
